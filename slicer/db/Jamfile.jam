import testing ;

lib dbppcore : : : : <include>/usr/include/dbpp ;
lib dbpp-postgresql : : : : <include>/usr/include/dbpp-postgresql ;
lib adhocutil : : : : <include>/usr/include/adhocutil ;
lib boost_system ;
lib boost_filesystem ;
lib boost_utf : : <name>boost_unit_test_framework ;
lib IceUtil ;

lib slicer-db :
	[ glob *.cpp : test*.cpp ]
	:
	<include>..
	<library>IceUtil
	<library>dbppcore
	<library>../..//glibmm
	<library>adhocutil
	<library>../slicer//slicer
	<cflags>-fvisibility=hidden
	: :
	<library>dbppcore
	;

path-constant me : . ;

run testSelect.cpp
	: : :
	<define>ROOT=\"$(me)\"
	<define>BOOST_TEST_DYN_LINK
	<library>slicer-db
	<library>dbpp-postgresql
	<library>boost_system
	<library>boost_filesystem
	<library>boost_utf
	<library>../test//slicer-test
	<library>../test//common
	<library>../slicer//slicer
	<include>..
	<dependency>slicer.sql
	<dependency>../test//compilation
	:
	testSelect
	;

run testInsert.cpp
	: : :
	<define>ROOT=\"$(me)\"
	<define>BOOST_TEST_DYN_LINK
	<library>slicer-db
	<library>dbpp-postgresql
	<library>boost_system
	<library>boost_filesystem
	<library>boost_utf
	<library>../test//slicer-test
	<library>../test//common
	<library>../slicer//slicer
	<include>..
	<dependency>slicer.sql
	<dependency>../test//compilation
	:
	testInsert
	;

run testUpdate.cpp
	: : :
	<define>ROOT=\"$(me)\"
	<define>BOOST_TEST_DYN_LINK
	<library>slicer-db
	<library>dbpp-postgresql
	<library>boost_system
	<library>boost_filesystem
	<library>boost_utf
	<library>../test//slicer-test
	<library>../test//common
	<library>../slicer//slicer
	<include>..
	<dependency>slicer.sql
	<dependency>../test//compilation
	:
	testUpdate
	;

