import package ;
import ../test/slicer.jam ;

lib dbppcore : : : : <include>/usr/include/dbpp ;
lib dbpp-postgresql : : : : <include>/usr/include/dbpp-postgresql ;
lib stdc++fs ;
lib benchmark ;

obj sqlExceptions : sqlExceptions.ice : <use>../slicer//slicer <toolset>tidy:<checker>none ;
lib slicer-db :
	[ glob *.cpp : test*.cpp ]
	sqlExceptions
	:
	<library>..//Ice
	<library>dbppcore
	<library>../..//glibmm
	<library>..//adhocutil
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<implicit-dependency>sqlExceptions
	<dependency>../slicer//install-headers-local
	: :
	<library>dbppcore
	<implicit-dependency>sqlExceptions
	;

path-constant me : . ;

lib dbicetypes :
	[ glob test*.ice ]
	:
	<slicer>no
	<library>../slicer//slicer
	<library>../test//icetypes
	<implicit-dependency>../test//icetypes
	<toolset>tidy:<checker>none
	;
lib testCommon :
	[ glob testConversions.cpp testMockCommon.cpp test*.ice ]
	:
	<dependency>../tool//slicer
	<slicer>pure
	<implicit-dependency>../test//types
	<library>../test//types
	<library>../test//common
	<library>dbpp-postgresql
	<library>dbppcore
	<library>..//adhocutil
	<library>dbicetypes
	<implicit-dependency>dbicetypes
	-<variant>debug\:<warnings-as-errors>on
	<toolset>tidy:<warnings-as-errors>off
	<toolset>gcc:<dependency>../tool//slicer/<toolset>gcc
	<toolset>clang:<dependency>../tool//slicer/<toolset>clang
	<toolset>tidy:<dependency>../tool//slicer/<toolset>gcc
	<toolset>gcc:<slicerbin>../tool//slicer/<toolset>gcc
	<toolset>clang:<slicerbin>../tool//slicer/<toolset>clang
	<toolset>tidy:<slicerbin>../tool//slicer/<toolset>gcc
	: :
	<library>..//adhocutil
	<library>dbicetypes
	<implicit-dependency>dbicetypes
	;

run testSelect.cpp
	: : :
	<define>BOOST_TEST_DYN_LINK
	<library>slicer-db
	<implicit-dependency>slicer-db
	<library>dbpp-postgresql
	<library>stdc++fs
	<library>..//boost_utf
	<library>../test//types
	<library>../test//common
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>testCommon
	<implicit-dependency>testCommon
	<include>..
	<dependency>slicer.sql
	:
	testSelect
	;

run testInsert.cpp
	: : :
	<define>BOOST_TEST_DYN_LINK
	<library>slicer-db
	<library>dbpp-postgresql
	<library>stdc++fs
	<library>..//boost_utf
	<library>../test//types
	<library>../test//common
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>testCommon
	<implicit-dependency>testCommon
	<include>..
	<dependency>slicer.sql
	:
	testInsert
	;

run testPatch.cpp
	: : :
	<define>BOOST_TEST_DYN_LINK
	<library>slicer-db
	<library>dbpp-postgresql
	<library>stdc++fs
	<library>..//boost_utf
	<library>../test//types
	<library>../test//common
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>testCommon
	<implicit-dependency>testCommon
	<include>..
	<dependency>slicer.sql
	;

run testUpdate.cpp
	: : :
	<define>BOOST_TEST_DYN_LINK
	<library>slicer-db
	<implicit-dependency>slicer-db
	<library>dbpp-postgresql
	<library>stdc++fs
	<library>..//boost_utf
	<library>../test//types
	<library>../test//common
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>testCommon
	<implicit-dependency>testCommon
	<include>..
	<dependency>slicer.sql
	:
	testUpdate
	;

run
	[ obj perf : testPerf.cpp :
		<slicer>pure
		<use>../test//types
		<implicit-dependency>../test//types
		<use>benchmark
		<use>stdc++fs
		<use>dbpp-postgresql
		<use>dbppcore
		<use>..//adhocutil
		<use>../test//common
		<use>../slicer//slicer
		<implicit-dependency>../slicer//slicer
		<use>testCommon
		<implicit-dependency>testCommon
		<use>slicer-db
	]
	: : :
	<library>benchmark
	<library>stdc++fs
	<library>dbpp-postgresql
	<library>dbppcore
	<library>../test//common
	<library>../test//types
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>slicer-db
	<library>..//adhocutil
	<library>testCommon
	<implicit-dependency>testCommon
	<variant>profile:<testing.execute>on
	<testing.execute>off
	: testPerf ;

alias install : install-lib install-slice ;
explicit install ;
explicit install-lib ;
explicit install-slice ;
package.install install-lib : <install-header-subdir>slicer/db : : slicer-db : [ glob-tree *.h : test*.h ] ;
package.install-data install-slice : ice/slicer/db : [ glob *.ice : test*.ice ] ;

