import ./slicer.jam ;

lib dl ;
lib stdc++fs ;
lib boost_date_time ;
lib benchmark ;

lib icetypes :
	[ glob *.ice ]
	:
	<slicer>no
	<include>.
	<implicit-dependency>included//included
	<library>included//included
	<toolset>tidy:<checker>none
	<toolset>clang:<cflags>-Wno-error=unused-const-variable
	: :
	<include>.
	<implicit-dependency>included//included
	<library>included//included
	;
lib types :
	[ glob *.ice ]
	conversions.cpp
	functionsImpl.cpp
	:
	<toolset>gcc:<dependency>../tool//slicer/<toolset>gcc
	<toolset>clang:<dependency>../tool//slicer/<toolset>clang
	<toolset>tidy:<dependency>../tool//slicer/<toolset>gcc
	<slicer>pure
	<toolset>gcc:<slicerbin>../tool//slicer/<toolset>gcc
	<toolset>clang:<slicerbin>../tool//slicer/<toolset>clang
	<toolset>tidy:<slicerbin>../tool//slicer/<toolset>gcc
	-<variant>debug\:<warnings-as-errors>on
	<toolset>tidy:<warnings-as-errors>off
	<include>.
	<library>..//adhocutil
	<library>boost_date_time
	<library>included//included
	<library>../slicer//slicer
	<library>icetypes
	<implicit-dependency>icetypes
	<implicit-dependency>../slicer//slicer
	: :
	<include>.
	<library>icetypes
	<library>../slicer//slicer
	;

path-constant me : . ;

alias common : : : :
	<library>stdc++fs
	<define>BOOST_TEST_DYN_LINK
	<library>..//boost_utf
	<define>ROOT=\"$(me)\"
	;

run preprocessor.cpp
	: : :
	<library>common
	<library>..//adhocutil
	<include>..
	<library>../tool//slicer-compiler
	<variant>san:<testing.launcher>LSAN_OPTIONS=suppressions=$(me)/leak.suppressions
	<variant>san:<dependency>$(me)/leak.suppressions
	:
	preprocess
	;

run compilation.cpp
	: : :
	<include>..
	<library>../slicer//slicer
	<library>types
	<implicit-dependency>types
	<library>common
	:
	compilation
	;

run serializers.cpp
	helpers.cpp
	: : :
	<library>types
	<implicit-dependency>types
	<library>common
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>../xml//slicer-xml
	<library>../json//slicer-json
	:
	serializers
	;

lib streams-mp :
	streams-mp.cpp
	:
	<library>common
	<library>types
	;

run streams.cpp
	helpers.cpp
	: : :
	<library>streams-mp
	<library>types
	<implicit-dependency>types
	<library>common
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>../xml//slicer-xml
	<library>../json//slicer-json
	;

run
	[ obj perf : perf.cpp :
		<slicer>pure
		<define>ROOT=\"$(me)\"
		<use>types
		<implicit-dependency>types
		<use>benchmark
		<use>stdc++fs
		<use>..//adhocutil
		<use>common
		<use>../slicer//slicer
		<implicit-dependency>../slicer//slicer
		<use>../xml//slicer-xml
		<use>../json//slicer-json
	]
	: : :
	<library>benchmark
	<library>stdc++fs
	<library>common
	<library>types
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>../xml//slicer-xml
	<library>../json//slicer-json
	<library>..//adhocutil
	<variant>profile:<testing.execute>on
	<testing.execute>off
	: perf ;
