import testing ;
import generators ;
import type ;
import feature ;
import toolset ;

lib dl ;
lib pthread ;
lib Ice ;
lib IceUtil ;
lib boost_system ;
lib boost_filesystem ;
lib boost_date_time ;
lib boost_utf : : <name>boost_unit_test_framework ;
lib adhocutil : : : : <include>/usr/include/adhocutil ;

generators.register-standard $(__name__).slicer : SLICE : CPP : <slicer>pure ;
generators.override $(__name__).slicer : slice.slicer.pure ;
feature.feature slicerbin : : free dependency ;
toolset.flags slicer SLICERBIN <slicerbin> ;
toolset.flags slicer INCLUDES <include> ;
toolset.flags slicer ALLOWICE <allow-ice>yes : --ice ;

actions slicer bind SLICERBIN
{
	truncate -c -s 0 $(1[1])
	"$(SLICERBIN)" -I"$(INCLUDES)" $(2) $(1[1]) $(ALLOWICE[1]) --headerPrefix="\"\""
}

lib typesice :
	[ glob *.ice ]
	:
	<slicer>no
	<include>.
	<include>included
	<library>pthread
	<library>Ice
	<library>IceUtil
	<library>included//included
	<implicit-dependency>included//included
	: :
	<library>pthread
	<library>Ice
	<library>IceUtil
	;

lib types :
	[ glob *.ice ]
	conversions.cpp
	:
	<dependency>../tool//slicer
	<slicer>pure
	<slicerbin>../tool//slicer
	<include>.
	<library>adhocutil
	<library>typesice
	<library>boost_date_time
	<library>included//included
	<library>../slicer//slicer
	<implicit-dependency>typesice
	<implicit-dependency>included//included
	<implicit-dependency>../slicer//slicer
	: :
	<include>.
	<library>included//included
	<library>../slicer//slicer
	<library>typesice
	;

path-constant me : . ;

alias common : : : :
	<library>boost_filesystem
	<library>boost_system
	<define>BOOST_TEST_DYN_LINK
	<library>boost_utf
	<implicit-dependency>types
	<define>ROOT=\"$(me)\"
	;

run preprocessor.cpp
	: : :
	<library>common
	<library>adhocutil
	<include>..
	<library>../tool//slicer-compiler
	:
	preprocess
	;

run compilation.cpp
	: : :
	<include>..
	<library>../slicer//slicer
	<library>types
	<library>common
	:
	compilation
	;

run serializers.cpp
	helpers.cpp
	: : :
	<library>types
	<library>common
	<library>../slicer//slicer
	<implicit-dependency>../slicer//slicer
	<library>../xml//slicer-xml
	<library>../json//slicer-json
	:
	serializers
	;

